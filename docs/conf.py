import os
import sys
from datetime import datetime

sys.path.insert(0, os.path.abspath(".."))

project = "pytagi"
author = (
    "Luong-Ha Nguyen, James-A. Goulet, Van Dai Vuong, Miquel Florensa-Montilla"
)
copyright = f"{datetime.now():%Y}, {author}"

extensions = [
    "myst_parser",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx_autodoc_typehints",
    "autoapi.extension",
    "sphinx_copybutton",
    "sphinx.ext.mathjax",
    "nbsphinx",
]

autoapi_ignore = [
    "*/pytagi/__version.py",  # Exclude the source file
    "*/pytagi/__version/*.rst",  # Exclude the generated documentation files
]

autoapi_type = "python"
autoapi_dirs = [os.path.abspath("../pytagi")]
autoapi_add_toctree_entry = False
autoapi_keep_files = True

napoleon_google_docstring = True
html_theme = "sphinx_book_theme"
html_theme_options = {
    "repository_url": "https://github.com/lhnguyen102/cuTAGI",
    "use_repository_button": True,
    "use_download_button": False,
}
html_logo = "_static/tagiml.png"
html_static_path = ["_static"]


# --- Hide AutoAPI's attribute entries (keep your manual "Attributes:" docstrings) ---
def _skip_auto_attributes(app, what, name, obj, skip, options):
    # Hide *all* attribute entries generated by AutoAPI (instance/class attrs)
    if what == "attribute":
        return True  # skip
    return None  # fall back to default for everything else (methods, classes, etc.)


def setup(app):
    app.connect("autoapi-skip-member", _skip_auto_attributes)
